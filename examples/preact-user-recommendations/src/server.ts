import { Layer } from "effect"
import { BunTailwindPlugin, Start } from "effect-start"

export default Layer.mergeAll(
  Start.router(() => import("./routes/_manifest")),
  Start.bundleClient({
    entrypoints: ["src/index.html"],
    plugins: [BunTailwindPlugin.make()],
    target: "browser",
    external: [
      // Node.js built-in modules that cause browser conflicts
      "tty",
      "node:tty",
      "fs",
      "node:fs",
      "fs/promises",
      "node:fs/promises",
      "os",
      "node:os",
      "crypto",
      "node:crypto",
      "path",
      "node:path",
      "stream",
      "node:stream",
      "http",
      "node:http",
      "https",
      "node:https",
      "net",
      "node:net",
      "util",
      "node:util",
      "events",
      "node:events",
      "child_process",
      "node:child_process",
      "zlib",
      "node:zlib",
      "buffer",
      "node:buffer",
      "url",
      "node:url",
      "querystring",
      "node:querystring",
      "cluster",
      "node:cluster",
      "dns",
      "node:dns",
      "dgram",
      "node:dgram",
      "readline",
      "node:readline",
      "repl",
      "node:repl",
      "vm",
      "node:vm",
      "assert",
      "node:assert",
      "console",
      "node:console",
      "constants",
      "node:constants",
      "domain",
      "node:domain",
      "module",
      "node:module",
      "perf_hooks",
      "node:perf_hooks",
      "process",
      "node:process",
      "punycode",
      "node:punycode",
      "string_decoder",
      "node:string_decoder",
      "sys",
      "node:sys",
      "timers",
      "node:timers",
      "v8",
      "node:v8",
      "worker_threads",
      "node:worker_threads",
    ],
  }),
)

if (import.meta.main) {
  Start.serve(() => import("./server"))
}
